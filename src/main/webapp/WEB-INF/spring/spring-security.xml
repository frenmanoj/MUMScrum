<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http auto-config="true" use-expressions="true">

		<!-- <intercept-url pattern="/productBacklog/**" access="hasRole('ROLE_PRODUCT_OWNER')" />

		<intercept-url pattern="/login*" access="isAnonymous()" />
		<intercept-url pattern="/**" access="isAuthenticated()" /> -->


		<form-login login-page="/login" default-target-url="/index"
			authentication-failure-url="/login?error" username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login?logout" />

		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

		<!-- enable csrf protection -->
		<csrf />

	</http>

	<!-- <authentication-manager> <authentication-provider> <user-service> <user 
		name="admin" password="admin" authorities="ROLE_USER" /> </user-service> 
		</authentication-provider> </authentication-manager> -->

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from user where username=?"
				authorities-by-username-query="select u.username,r.role from user u, user_role ur, role r where u.username=? and u.id = ur.user_id and r.id = ur.role_id" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>